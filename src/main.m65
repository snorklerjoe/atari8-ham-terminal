; Main program.


; Includes:
;  equates & macros
.include "sysequates.m65"
.include "zpregs.m65"
.include "utils.m65"

; Display memory
.bank
* = $A000 "Screen Buffer"
.include "screenbuffer.m65"

; Custom display list
.bank
* = $600 "Display List"
.include "dlist.m65"

; Main code
.bank
*=$8000
;  configuration
.include "config.m65"
.include "configtools.m65"
;  low-level i/o
.include "cio.m65"
.include "keyb_util.m65"
.include "disp_util.m65"
;  high-level i/o
.include "conio.m65"
.include "a850io.m65"

; High-level code
.include "configmenu.m65"

; Main program:
MSG:  .byte "Hello World!",$9B,$00

; Program entry:
init:
    jmp _CIO_TEST

_CIO_TEST:
    ; Init
    jsr dl_vbi_install
    jsr dl_setzero
    jsr keyinit

    ; Print
;    staddr MSG,BUFPTR
;    jsr PRINT

loop:
    ; Wait for char
    jsr GETCH

    ; Handle scrolling & Backspace
    cmp #$1C
    beq scroll_one_back
    cmp #$1D
    beq scroll_one_fwd
    cmp #126
    beq bs

    ; Handle config
    cmp #01
    beq main_config_menu

    pha
    ; write it
    jsr PUTCH
    pla
;    cmp #27
;    beq closedown
;    cmp #$9B
;    bne loop
;    jsr dl_newline
;    jsr dl_setzero
    jmp loop
;    staddr MSG,BUFPTR
;    jsr PRINT

scroll_one_back:
    jsr cursor_undraw
    jsr discurs
    jsr dl_scroll_back_one
    jsr dl_setzero
    jmp loop
scroll_one_fwd:
    jsr cursor_undraw
    jsr discurs
    jsr dl_scroll_one
    jsr dl_setzero
    jmp loop

bs:
    jsr encurs
    jsr cursor_undraw
    jsr backspace
    jmp loop

; On CTRL-A...
main_config_menu:
    tempsetcolor 4,255

    jsr config_menu

    returncolor 4
    jmp loop

closedown:
    ; Close
    jsr keyclose
    pla  ; Pull return addr from stack
    pla
    jmp WARMSV

; Init vector
.bank
*=RUNAD
.word init
